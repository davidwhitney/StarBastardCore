@using Newtonsoft.Json
@using StarBastardCore.Website.Code.Game.Gameplay.Actions
@model StarBastardCore.Website.Controllers.GameBoardAndSupportingUiDataViewModel
@{
    ViewBag.Title = "title";
}

<div class="page-header">
    <h1> @Model.Gameboard.Name <small>@Model.Gameboard.CurrentPlayer.Name's turn.</small></h1>
</div>

<div id="gameplayarea" class="row clearfix">
    <div id="gameboard" class="span4">
        <div id="systems"></div>
    </div>
    <div id="central-column" class="span4">
        <div id="zoomed-in" style="display: none;">
            
            <div style="float: left;">
                <h3 id="zoomed-system-name" style="margin: 0px; padding: 0px;"></h3>
            </div>
            
            <div id="zoomed-keystats" style="float: right;">
                <span title="Buildings built" class="badge poptip"><span id="zoomed-number-of-buildings-built" class="keystat"></span>/<span id="zoomed-number-of-buildings-cap"></span></span>
                <span title="Armies in battlefield" id="zoomed-number-of-armies-in-battlefield" class="keystat poptip badge badge-success"></span>
                <span title="Ships in orbit" id="zoomed-number-of-ships-in-orbit" class="keystat poptip badge badge-warning"></span>
                <span title="Enemy ships in orbit" id="zoomed-number-of-enemy-ships-in-orbit" class="keystat poptip badge badge-important"></span>
            </div>

            <div style="clear: both;"></div>
            
            <p>
                <small>Occupied by <b id="zoomed-occupier-id"></b></small>
            </p>

            <div id="zoomed-orbit">
                <h2>Orbit</h2>
                <div>
                    <div id="zoomed-orbit-ships"></div>
                </div>
            </div>
            <div id="zoomed-battlefield">
                <h2>Battlefield</h2>
            </div>
            <div id="zoomed-city">
                <h2>City</h2>
                            
                <div class="btn-group">
                    <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
                        Build <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @{ var availableBuildingTypes = Model.AvailableBuildingTypes; }
                        @foreach(var building in availableBuildingTypes) {
                            <a href="#" class="buildCommand" data-building="@building">Build @building</a>
                        }
                    </ul>
                </div>

                <div>
                    <div id="zoomed-city-items"></div>
                </div>
            </div>
            <div id="zoomed-income">
                <h2>Income</h2>
                <div>
                    Ore  income: <span id="zoomed-ore-income"></span><br/>
                    Food income: <span id="zoomed-food-income"></span><br/>
                    Tech income: <span id="zoomed-tech-income"></span><br/>
                </div>
            </div>
            <div style="padding-top: 25px;">
                <button class="switch-to-map">Close</button>
            </div>
        </div>
    </div>
    <div id="player" class="span4">
        
            
        <div class="well well-small">
            <h3 id="activePlayerName">@Model.LoggedInPlayer.Name</h3>
            <div>
                Ore  income: <span id="player-ore-income">@Model.LoggedInPlayer.Resources.Ore</span><br/>
                Food income: <span id="player-food-income">@Model.LoggedInPlayer.Resources.Food</span><br/>
                Tech income: <span id="player-tech-income">@Model.LoggedInPlayer.Resources.Tech</span><br/>
            </div>
        </div>
            
        <div class="well well-small">
            <h3>Turn</h3>
            <div>
                @using(Html.BeginForm("EndTurn", "Game", FormMethod.Post)){
                    <input type="submit" value="End Turn"/>
                }

                Round: <span class="round-number">@Model.Gameboard.Round</span><br/>
                Player: <span class="player-number">@Model.Gameboard.CurrentPlayer.Name</span><br/>
            </div>
        </div>

        <div class="well well-small">
            <h2>Queue</h2>
            <div id="player-actionqueue">
                @foreach (var action in Model.Gameboard.UncomittedActions)
                {
                    @: @action.ActionName @string.Join(", ", action.Parameters.Values)<br />
                }
            </div>
        </div>
    </div>
</div>


<div style="clear:both;"></div>
<div class="clearfix"></div>
<div id="systemsSummary"></div>
            
@{ var loggedInPlayerJson = JsonConvert.SerializeObject(Model.LoggedInPlayer); }
@{ var gameBoardJson = JsonConvert.SerializeObject(Model.Gameboard); }
@section scripts {

    @Scripts.Render("~/bundles/game-renderer")

    <script type="text/javascript">
        $(function() {
            
            var $playerStatusRenderer = new playerStatusRenderer();
            var $systemDetailsRenderer = new systemDetailsRenderer();
            var $gameboardRenderer = new gameBoardRenderer();

            
            var gameboard = @(Html.Raw(gameBoardJson));
            var loggedInPlayer = @(Html.Raw(loggedInPlayerJson));
            
            window.gameboard = gameboard.Systems;
            window.context = gameboard;
            
            $gameboardRenderer.render(context, $("#systems"));

            var $playerControls = new playerControls(function(ctx) {
                $systemDetailsRenderer.render(ctx, $playerControls.getSelectedSystem());
                $playerStatusRenderer.render(context, loggedInPlayer);
            });
            
            $playerControls.bindToUi();
            
        });
    </script>
}


<section>
    <h2>Debug - World Model</h2>
    <p>This is the filtered view for the current player.</p>
    <code>
        @(Html.Raw(gameBoardJson));
    </code>
    
    <p>Available buildings</p>
    <code>
        @(Html.Raw(JsonConvert.SerializeObject(Model.AvailableBuildingTypes)))}
    </code>
    
    <p>ActionExamples - Move</p>
    <code>
        @(Html.Raw(JsonConvert.SerializeObject(new Move{DestinationPlanetId = "1_19", StarshipId = Guid.NewGuid()})))}
    </code>
</section>